----------------------------------------------------------------------
Hustler's Notes
----------------------------------------------------------------------

(a) kprobes

The eBPF Kprobe type enables eBPF programs to dynamically attach
to any function in the kernel.

(b) uprobes


(c) tracepoints

The eBPF Tracepoint type enables eBPF programs to attach to the
tracepoint handler provided by the kernel.

All tracepoints defined in /sys/kernel/debug/tracing/events

(d) perf events

The eBPF Perf Event type allows eBPF programs to attach to the
kernels internal Perf profiler.

eBPF maps offer a two-way data structure for transferring data
in and out of kernel-space. Maps are the only way for an eBPF
program to communicate with other eBPF program invocations and
/or user-space.

The Just-in-Time (JIT) compilation step translates the generic
bytecode of the program into the machine specific instruction
set to optimize execution speed of the program.

            +-----------------------+
            |     eBPF Program      |
            +-----------------------+
                        |
            +-----------------------+
            |  Compiler Toolchains  |
            +-----------------------+
                        |
            +-----------------------+
            | eBPF Program Bytecode |------+
            +-----------------------+      |
                        |                  |
            +-----------------------+      |
            | APP (bpftool) |  Lib  |      |
            +-----------------------+      |
                        |                  |
User               +---------+             |
-------------------| Shared  |-------------|---------------------
Kernel             | memory  |             ▼
                   +---------+       +----------+---------------+
                        |            | Verifier |  JIT compiler |
                        +-------+    +----------+---------------+
                                 \
                             +----------------------------------+
+-----------------------+    |    (eBPF Program Native Code)    |
| Enlightened Component |◀--▶|                                  |
+-----------------------+    | eBPF Runtime (Execution Context) |
                             +----------------------------------+


----------------------------------------------------------------------

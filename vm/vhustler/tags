!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/bsp/pro/oscope/vm/vhustler/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
$(BUILD_DIR)/$(EXECUTABLE).elf	Makefile	/^$(BUILD_DIR)\/$(EXECUTABLE).elf:$/;"	t
APPLICATION	config.h	/^static char APPLICATION [] = "demo";$/;"	v	typeref:typename:char[]
ARCH	Makefile	/^ARCH := $(shell uname -m)$/;"	m
ARCH_TIME_ASM_H	arch/aarch64/inc/time_asm.h	/^#define ARCH_TIME_ASM_H$/;"	d
ARCH_UTILS_H	arch/aarch64/inc/utils.h	/^#define ARCH_UTILS_H$/;"	d
AS	Makefile	/^AS := $(CROSS_COMPILE)as$/;"	m
ASFLAGS	Makefile	/^ASFLAGS := -g -Wall -D__ASSEMBLY__$/;"	m
ASM	arch/aarch64/inc/utils.h	/^#define ASM /;"	d
AUTHOR	config.h	/^static char AUTHOR [] = "demo";$/;"	v	typeref:typename:char[]
AVGIC_H	arch/aarch64/inc/arch_gic.h	/^#define AVGIC_H$/;"	d
AV_ARCH_VCPU_H	arch/aarch64/inc/arch_vcpu.h	/^#define AV_ARCH_VCPU_H$/;"	d
AV_ARCH_VM_H	arch/aarch64/inc/arch_vm.h	/^#define AV_ARCH_VM_H$/;"	d
AV_BOARD_H	arch/aarch64/inc/board.h	/^#define AV_BOARD_H$/;"	d
AV_REGS_H	arch/aarch64/inc/regs.h	/^#define AV_REGS_H$/;"	d
AV_UART_H	peripherals/inc/uart.h	/^#define AV_UART_H$/;"	d
AV_VCPU_H	hypervisor/inc/vcpu.h	/^#define AV_VCPU_H$/;"	d
AV_virtual_machine_H	hypervisor/inc/vm.h	/^#define AV_virtual_machine_H$/;"	d
BE_INTERRUPT	peripherals/inc/uart.h	/^#define BE_INTERRUPT	/;"	d
BUILD_DIR	Makefile	/^BUILD_DIR := $(WORK_DIR)\/out$/;"	m
CC	Makefile	/^CC := $(CROSS_COMPILE)gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS 	:= -g -Wall$/;"	m
CNTV_CTL_ENABLE	arch/aarch64/inc/time_asm.h	/^#define CNTV_CTL_ENABLE /;"	d
CNTV_CTL_IMASK	arch/aarch64/inc/time_asm.h	/^#define CNTV_CTL_IMASK /;"	d
CNTV_CTL_ISTATUS	arch/aarch64/inc/time_asm.h	/^#define CNTV_CTL_ISTATUS /;"	d
CR	peripherals/inc/uart.h	/^	REG32 CR;                            $/;"	m	struct:PL011_REGS	typeref:typename:REG32
CROSS_COMPILE	Makefile	/^CROSS_COMPILE :=$/;"	m
CR_UARTEN	peripherals/inc/uart.h	/^#define CR_UARTEN /;"	d
CUR_VM	hypervisor/inc/vm.h	/^struct virtual_machine* CUR_VM;$/;"	v	typeref:struct:virtual_machine *
DAIF_FIQ_BIT	arch/aarch64/inc/irq.h	/^#define DAIF_FIQ_BIT /;"	d
DAIF_IRQ_BIT	arch/aarch64/inc/irq.h	/^#define DAIF_IRQ_BIT /;"	d
DEBUG	arch/aarch64/handler.c	/^#define DEBUG$/;"	d	file:
DESCRIPTION	config.h	/^static char DESCRIPTION [] = "demo";$/;"	v	typeref:typename:char[]
DR	peripherals/inc/uart.h	/^	REG32 DR;                            $/;"	m	struct:PL011_REGS	typeref:typename:REG32
DR_DATA_MASK	peripherals/inc/uart.h	/^#define DR_DATA_MASK /;"	d
EXECUTABLE	Makefile	/^EXECUTABLE := vhustler$/;"	m
FBRD	peripherals/inc/uart.h	/^	REG32 FBRD;                          $/;"	m	struct:PL011_REGS	typeref:typename:REG32
FR	peripherals/inc/uart.h	/^	REG32 FR;                            $/;"	m	struct:PL011_REGS	typeref:typename:REG32
FR_RXFE	peripherals/inc/uart.h	/^#define FR_RXFE /;"	d
GICD_CLRSPI_NSR	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint32_t GICD_CLRSPI_NSR;        \/\/ +0x0048 - WO - Non-secure Clear SPI Pending (/;"	m	struct:GICv3_dist_if	typeref:typename:volatile uint32_t
GICD_CLRSPI_SR	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint32_t GICD_CLRSPI_SR;         \/\/ +0x0058 - WO - Secure Clear SPI Pending (Used/;"	m	struct:GICv3_dist_if	typeref:typename:volatile uint32_t
GICD_CPENDSGIR	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint32_t GICD_CPENDSGIR[4];      \/\/ +0x0F10 - RW - Clear pending for SGIs$/;"	m	struct:GICv3_dist_if	typeref:typename:volatile uint32_t[4]
GICD_CTLR	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint32_t GICD_CTLR;              \/\/ +0x0000 - RW - Distributor Control Register$/;"	m	struct:GICv3_dist_if	typeref:typename:volatile uint32_t
GICD_GRPMODR	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint32_t GICD_GRPMODR[32];       \/\/ +0x0D00 - RW - Interrupt Group Modifier (Note/;"	m	struct:GICv3_dist_if	typeref:typename:volatile uint32_t[32]
GICD_ICACTIVER	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint32_t GICD_ICACTIVER[32];     \/\/ +0x0380 - RW - Interrupt Clear-Active Registe/;"	m	struct:GICv3_dist_if	typeref:typename:volatile uint32_t[32]
GICD_ICACTIVERE	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint32_t GICD_ICACTIVERE[128];   \/\/ +0x1C00 - RW - Interrupt Clear-Active Registe/;"	m	struct:GICv3_dist_if	typeref:typename:volatile uint32_t[128]
GICD_ICENABLER	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint32_t GICD_ICENABLER[32];     \/\/ +0x0180 - RW - Interrupt Clear-Enable Registe/;"	m	struct:GICv3_dist_if	typeref:typename:volatile uint32_t[32]
GICD_ICENABLERE	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint32_t GICD_ICENABLERE[128];   \/\/ +0x1400 - RW - Interrupt Clear-Enable Registe/;"	m	struct:GICv3_dist_if	typeref:typename:volatile uint32_t[128]
GICD_ICFGR	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint32_t GICD_ICFGR[64];         \/\/ +0x0C00 - RW - Interrupt Configuration Regist/;"	m	struct:GICv3_dist_if	typeref:typename:volatile uint32_t[64]
GICD_ICFGRE	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint32_t GICD_ICFGRE[256];       \/\/ +0x3000 - RW - Interrupt Configuration Regist/;"	m	struct:GICv3_dist_if	typeref:typename:volatile uint32_t[256]
GICD_ICPENDR	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint32_t GICD_ICPENDR[32];       \/\/ +0x0280 - RW - Interrupt Clear-Pending Regist/;"	m	struct:GICv3_dist_if	typeref:typename:volatile uint32_t[32]
GICD_ICPENDRE	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint32_t GICD_ICPENDRE[128];     \/\/ +0x1800 - RW - Interrupt Clear-Pending Regist/;"	m	struct:GICv3_dist_if	typeref:typename:volatile uint32_t[128]
GICD_IGROUPR	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint32_t GICD_IGROUPR[32];       \/\/ +0x0080 - RW - Interrupt Group Registers (Not/;"	m	struct:GICv3_dist_if	typeref:typename:volatile uint32_t[32]
GICD_IGROUPRE	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint32_t GICD_IGROUPRE[128];     \/\/ +0x1000 - RW - Interrupt Group Registers (GIC/;"	m	struct:GICv3_dist_if	typeref:typename:volatile uint32_t[128]
GICD_IGRPMODRE	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint32_t GICD_IGRPMODRE[128];    \/\/ +0x3400 - RW - Interrupt Group Modifier (GICv/;"	m	struct:GICv3_dist_if	typeref:typename:volatile uint32_t[128]
GICD_IIDR	arch/aarch64/gicv3/gicv3_registers.h	/^    const volatile uint32_t GICD_IIDR;              \/\/ +0x0008 - RO - Distributor Implementer /;"	m	struct:GICv3_dist_if	typeref:typename:const volatile uint32_t
GICD_IPRIORITYR	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint8_t  GICD_IPRIORITYR[1024];  \/\/ +0x0400 - RW - Interrupt Priority Registers$/;"	m	struct:GICv3_dist_if	typeref:typename:volatile uint8_t[1024]
GICD_IPRIORITYRE	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint8_t  GICD_IPRIORITYRE[4096]; \/\/ +0x2000 - RW - Interrupt Priority Registers (/;"	m	struct:GICv3_dist_if	typeref:typename:volatile uint8_t[4096]
GICD_ISACTIVER	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint32_t GICD_ISACTIVER[32];     \/\/ +0x0300 - RW - Interrupt Set-Active Register$/;"	m	struct:GICv3_dist_if	typeref:typename:volatile uint32_t[32]
GICD_ISACTIVERE	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint32_t GICD_ISACTIVERE[128];   \/\/ +0x1A00 - RW - Interrupt Set-Active Register /;"	m	struct:GICv3_dist_if	typeref:typename:volatile uint32_t[128]
GICD_ISENABLER	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint32_t GICD_ISENABLER[32];     \/\/ +0x0100 - RW - Interrupt Set-Enable Registers$/;"	m	struct:GICv3_dist_if	typeref:typename:volatile uint32_t[32]
GICD_ISENABLERE	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint32_t GICD_ISENABLERE[128];   \/\/ +0x1200 - RW - Interrupt Set-Enable Registers/;"	m	struct:GICv3_dist_if	typeref:typename:volatile uint32_t[128]
GICD_ISPENDR	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint32_t GICD_ISPENDR[32];       \/\/ +0x0200 - RW - Interrupt Set-Pending Register/;"	m	struct:GICv3_dist_if	typeref:typename:volatile uint32_t[32]
GICD_ISPENDRE	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint32_t GICD_ISPENDRE[128];     \/\/ +0x1600 - RW - Interrupt Set-Pending Register/;"	m	struct:GICv3_dist_if	typeref:typename:volatile uint32_t[128]
GICD_ITARGETSR	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint32_t GICD_ITARGETSR[256];    \/\/ +0x0800 - RW - Interrupt Processor Targets Re/;"	m	struct:GICv3_dist_if	typeref:typename:volatile uint32_t[256]
GICD_NSACR	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint32_t GICD_NSACR[64];         \/\/ +0x0E00 - RW - Non-secure Access Control Regi/;"	m	struct:GICv3_dist_if	typeref:typename:volatile uint32_t[64]
GICD_NSACRE	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint32_t GICD_NSACRE[256];       \/\/ +0x3600 - RW - Non-secure Access Control Regi/;"	m	struct:GICv3_dist_if	typeref:typename:volatile uint32_t[256]
GICD_ROUTER	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint64_t GICD_ROUTER[1024];      \/\/ +0x6000 - RW - Controls SPI routing when ARE=/;"	m	struct:GICv3_dist_if	typeref:typename:volatile uint64_t[1024]
GICD_ROUTERE	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint64_t GICD_ROUTERE[1024];     \/\/ +0x8000 - RW - Controls SPI routing when ARE=/;"	m	struct:GICv3_dist_if	typeref:typename:volatile uint64_t[1024]
GICD_SEIR	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint32_t GICD_SEIR;              \/\/ +0x0068 - WO - System Error Interrupt Registe/;"	m	struct:GICv3_dist_if	typeref:typename:volatile uint32_t
GICD_SETSPI_NSR	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint32_t GICD_SETSPI_NSR;        \/\/ +0x0040 - WO - Non-secure Set SPI Pending (Us/;"	m	struct:GICv3_dist_if	typeref:typename:volatile uint32_t
GICD_SETSPI_SR	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint32_t GICD_SETSPI_SR;         \/\/ +0x0050 - WO - Secure Set SPI Pending (Used w/;"	m	struct:GICv3_dist_if	typeref:typename:volatile uint32_t
GICD_SGIR	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint32_t GICD_SGIR;              \/\/ +0x0F00 - WO - Software Generated Interrupt R/;"	m	struct:GICv3_dist_if	typeref:typename:volatile uint32_t
GICD_SPENDSGIR	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint32_t GICD_SPENDSGIR[4];      \/\/ +0x0F20 - RW - Set pending for SGIs$/;"	m	struct:GICv3_dist_if	typeref:typename:volatile uint32_t[4]
GICD_STATUSR	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint32_t GICD_STATUSR;           \/\/ +0x0010 - RW - Status register$/;"	m	struct:GICv3_dist_if	typeref:typename:volatile uint32_t
GICD_TYPER	arch/aarch64/gicv3/gicv3_registers.h	/^    const volatile uint32_t GICD_TYPER;             \/\/ +0x0004 - RO - Interrupt Controller Typ/;"	m	struct:GICv3_dist_if	typeref:typename:const volatile uint32_t
GICR_CLRLPIR	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint64_t GICR_CLRLPIR;          \/\/ +0x0048 - WO - Set LPI pending (Note: IMP DEF /;"	m	struct:GICv3_rdist_lpis_if	typeref:typename:volatile uint64_t
GICR_CTLR	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint32_t GICR_CTLR;             \/\/ +0x0000 - RW - Redistributor Control Register$/;"	m	struct:GICv3_rdist_lpis_if	typeref:typename:volatile uint32_t
GICR_ICACTIVER	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint32_t GICR_ICACTIVER[3];     \/\/ +0x0380 - RW - Interrupt Clear-Active Register$/;"	m	struct:GICv3_rdist_sgis_if	typeref:typename:volatile uint32_t[3]
GICR_ICENABLER	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint32_t GICR_ICENABLER[3];     \/\/ +0x0180 - RW - Interrupt Clear-Enable Register/;"	m	struct:GICv3_rdist_sgis_if	typeref:typename:volatile uint32_t[3]
GICR_ICFGR	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint32_t GICR_ICFGR[6];         \/\/ +0x0C00 - RW - Interrupt Configuration Registe/;"	m	struct:GICv3_rdist_sgis_if	typeref:typename:volatile uint32_t[6]
GICR_ICPENDR	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint32_t GICR_ICPENDR[3];       \/\/ +0x0280 - RW - Interrupt Clear-Pending Registe/;"	m	struct:GICv3_rdist_sgis_if	typeref:typename:volatile uint32_t[3]
GICR_IGROUPR	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint32_t GICR_IGROUPR[3];       \/\/ +0x0080 - RW - Interrupt Group Registers (Secu/;"	m	struct:GICv3_rdist_sgis_if	typeref:typename:volatile uint32_t[3]
GICR_IGRPMODR	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint32_t GICR_IGRPMODR[3];      \/\/ +0x0D00 - RW - Interrupt Group Modifier Regist/;"	m	struct:GICv3_rdist_sgis_if	typeref:typename:volatile uint32_t[3]
GICR_IIDR	arch/aarch64/gicv3/gicv3_registers.h	/^    const volatile uint32_t GICR_IIDR;             \/\/ +0x0004 - RO - Redistributor Implementer/;"	m	struct:GICv3_rdist_lpis_if	typeref:typename:const volatile uint32_t
GICR_INVALLR	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint64_t GICR_INVALLR;          \/\/ +0x00B0 - WO - Invalidates cached LPI config (/;"	m	struct:GICv3_rdist_lpis_if	typeref:typename:volatile uint64_t
GICR_INVLPIR	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint64_t GICR_INVLPIR;          \/\/ +0x00A0 - WO - Invalidates cached LPI config (/;"	m	struct:GICv3_rdist_lpis_if	typeref:typename:volatile uint64_t
GICR_IPRIORITYR	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint8_t  GICR_IPRIORITYR[96];   \/\/ +0x0400 - RW - Interrupt Priority Registers$/;"	m	struct:GICv3_rdist_sgis_if	typeref:typename:volatile uint8_t[96]
GICR_ISACTIVER	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint32_t GICR_ISACTIVER[3];     \/\/ +0x0300 - RW - Interrupt Set-Active Register$/;"	m	struct:GICv3_rdist_sgis_if	typeref:typename:volatile uint32_t[3]
GICR_ISENABLER	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint32_t GICR_ISENABLER[3];     \/\/ +0x0100 - RW - Interrupt Set-Enable Registers$/;"	m	struct:GICv3_rdist_sgis_if	typeref:typename:volatile uint32_t[3]
GICR_ISPENDR	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint32_t GICR_ISPENDR[3];       \/\/ +0x0200 - RW - Interrupt Set-Pending Registers$/;"	m	struct:GICv3_rdist_sgis_if	typeref:typename:volatile uint32_t[3]
GICR_MOVALLR	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint64_t GICR_MOVALLR;          \/\/ +0x0110 - WO - IMP DEF$/;"	m	struct:GICv3_rdist_lpis_if	typeref:typename:volatile uint64_t
GICR_MOVLPIR	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint64_t GICR_MOVLPIR;          \/\/ +0x0100 - WO - IMP DEF$/;"	m	struct:GICv3_rdist_lpis_if	typeref:typename:volatile uint64_t
GICR_MPAMIDR	arch/aarch64/gicv3/gicv3_registers.h	/^    const volatile uint32_t GICR_MPAMIDR;          \/\/ +0x0018 - RO - Reports maximum PARTID an/;"	m	struct:GICv3_rdist_lpis_if	typeref:typename:const volatile uint32_t
GICR_NSACR	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint32_t GICR_NSACR;            \/\/ +0x0E00 - RW - Non-secure Access Control Regis/;"	m	struct:GICv3_rdist_sgis_if	typeref:typename:volatile uint32_t
GICR_PARTID	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint32_t GICR_PARTID;           \/\/ +0x001C - RW - Set PARTID and PMG used for Red/;"	m	struct:GICv3_rdist_lpis_if	typeref:typename:volatile uint32_t
GICR_PENDBASER	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint64_t GICR_PENDBASER;        \/\/ +0x0078 - RW - Sets location of the LPI pendin/;"	m	struct:GICv3_rdist_lpis_if	typeref:typename:volatile uint64_t
GICR_PROPBASER	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint64_t GICR_PROPBASER;        \/\/ +0x0070 - RW - Sets location of the LPI config/;"	m	struct:GICv3_rdist_lpis_if	typeref:typename:volatile uint64_t
GICR_SEIR	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint32_t GICR_SEIR;             \/\/ +0x0068 - WO - (Note: This was removed from th/;"	m	struct:GICv3_rdist_lpis_if	typeref:typename:volatile uint32_t
GICR_SETLPIR	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint64_t GICR_SETLPIR;          \/\/ +0x0040 - WO - Set LPI pending (Note: IMP DEF /;"	m	struct:GICv3_rdist_lpis_if	typeref:typename:volatile uint64_t
GICR_STATUSR	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint32_t GICR_STATUSR;          \/\/ +0x0010 - RW - Redistributor Status register$/;"	m	struct:GICv3_rdist_lpis_if	typeref:typename:volatile uint32_t
GICR_SYNCR	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint64_t GICR_SYNCR;            \/\/ +0x00C0 - WO - Redistributor Sync$/;"	m	struct:GICv3_rdist_lpis_if	typeref:typename:volatile uint64_t
GICR_TYPER	arch/aarch64/gicv3/gicv3_registers.h	/^    const volatile uint32_t GICR_TYPER[2];         \/\/ +0x0008 - RO - Redistributor Type Regist/;"	m	struct:GICv3_rdist_lpis_if	typeref:typename:const volatile uint32_t[2]
GICR_VPENDBASER	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint64_t GICR_VPENDBASER;       \/\/ +0x0078 - RW - Sets location of the LPI Pendin/;"	m	struct:GICv3_rdist_vlpis_if	typeref:typename:volatile uint64_t
GICR_VPROPBASER	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint64_t GICR_VPROPBASER;       \/\/ +0x0070 - RW - Sets location of the LPI vPE Co/;"	m	struct:GICv3_rdist_vlpis_if	typeref:typename:volatile uint64_t
GICR_WAKER	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint32_t GICR_WAKER;            \/\/ +0x0014 - RW - Wake Request Registers$/;"	m	struct:GICv3_rdist_lpis_if	typeref:typename:volatile uint32_t
GICV3_CONFIG_EDGE	arch/aarch64/gicv3/gicv3_basic.h	/^#define GICV3_CONFIG_EDGE /;"	d
GICV3_CONFIG_LEVEL	arch/aarch64/gicv3/gicv3_basic.h	/^#define GICV3_CONFIG_LEVEL /;"	d
GICV3_GROUP0	arch/aarch64/gicv3/gicv3_basic.h	/^#define GICV3_GROUP0 /;"	d
GICV3_GROUP1_NON_SECURE	arch/aarch64/gicv3/gicv3_basic.h	/^#define GICV3_GROUP1_NON_SECURE /;"	d
GICV3_GROUP1_SECURE	arch/aarch64/gicv3/gicv3_basic.h	/^#define GICV3_GROUP1_SECURE /;"	d
GICV3_ROUTE_AFF3_SHIFT	arch/aarch64/gicv3/gicv3_basic.c	/^#define GICV3_ROUTE_AFF3_SHIFT /;"	d	file:
GICV3_ROUTE_MODE_ANY	arch/aarch64/gicv3/gicv3_basic.h	/^#define GICV3_ROUTE_MODE_ANY /;"	d
GICV3_ROUTE_MODE_COORDINATE	arch/aarch64/gicv3/gicv3_basic.h	/^#define GICV3_ROUTE_MODE_COORDINATE /;"	d
GICV3_SGI_AFF1_SHIFT	arch/aarch64/gicv3/gicv3_basic.h	/^#define GICV3_SGI_AFF1_SHIFT /;"	d
GICV3_SGI_AFF2_SHIFT	arch/aarch64/gicv3/gicv3_basic.h	/^#define GICV3_SGI_AFF2_SHIFT /;"	d
GICV3_SGI_AFF3_SHIFT	arch/aarch64/gicv3/gicv3_basic.h	/^#define GICV3_SGI_AFF3_SHIFT /;"	d
GICV3_SGI_ID0	arch/aarch64/gicv3/gicv3_basic.h	/^#define GICV3_SGI_ID0 /;"	d
GICV3_SGI_ID1	arch/aarch64/gicv3/gicv3_basic.h	/^#define GICV3_SGI_ID1 /;"	d
GICV3_SGI_ID10	arch/aarch64/gicv3/gicv3_basic.h	/^#define GICV3_SGI_ID10 /;"	d
GICV3_SGI_ID11	arch/aarch64/gicv3/gicv3_basic.h	/^#define GICV3_SGI_ID11 /;"	d
GICV3_SGI_ID12	arch/aarch64/gicv3/gicv3_basic.h	/^#define GICV3_SGI_ID12 /;"	d
GICV3_SGI_ID13	arch/aarch64/gicv3/gicv3_basic.h	/^#define GICV3_SGI_ID13 /;"	d
GICV3_SGI_ID14	arch/aarch64/gicv3/gicv3_basic.h	/^#define GICV3_SGI_ID14 /;"	d
GICV3_SGI_ID15	arch/aarch64/gicv3/gicv3_basic.h	/^#define GICV3_SGI_ID15 /;"	d
GICV3_SGI_ID2	arch/aarch64/gicv3/gicv3_basic.h	/^#define GICV3_SGI_ID2 /;"	d
GICV3_SGI_ID3	arch/aarch64/gicv3/gicv3_basic.h	/^#define GICV3_SGI_ID3 /;"	d
GICV3_SGI_ID4	arch/aarch64/gicv3/gicv3_basic.h	/^#define GICV3_SGI_ID4 /;"	d
GICV3_SGI_ID5	arch/aarch64/gicv3/gicv3_basic.h	/^#define GICV3_SGI_ID5 /;"	d
GICV3_SGI_ID6	arch/aarch64/gicv3/gicv3_basic.h	/^#define GICV3_SGI_ID6 /;"	d
GICV3_SGI_ID7	arch/aarch64/gicv3/gicv3_basic.h	/^#define GICV3_SGI_ID7 /;"	d
GICV3_SGI_ID8	arch/aarch64/gicv3/gicv3_basic.h	/^#define GICV3_SGI_ID8 /;"	d
GICV3_SGI_ID9	arch/aarch64/gicv3/gicv3_basic.h	/^#define GICV3_SGI_ID9 /;"	d
GICV3_SGI_NO_NS_ACCESS	arch/aarch64/gicv3/gicv3_basic.h	/^#define GICV3_SGI_NO_NS_ACCESS /;"	d
GICV3_SGI_NS_ACCESS_GROUP0	arch/aarch64/gicv3/gicv3_basic.h	/^#define GICV3_SGI_NS_ACCESS_GROUP0 /;"	d
GICV3_SGI_NS_ACCESS_GROUP1	arch/aarch64/gicv3/gicv3_basic.h	/^#define GICV3_SGI_NS_ACCESS_GROUP1 /;"	d
GICV3_SGI_ROUTING_ALL	arch/aarch64/gicv3/gicv3_basic.h	/^#define GICV3_SGI_ROUTING_ALL /;"	d
GICV3_SGI_ROUTING_LIST	arch/aarch64/gicv3/gicv3_basic.h	/^#define GICV3_SGI_ROUTING_LIST /;"	d
GICV3_SGI_TARGET_CPU0	arch/aarch64/gicv3/gicv3_basic.h	/^#define GICV3_SGI_TARGET_CPU0 /;"	d
GICV3_SGI_TARGET_CPU1	arch/aarch64/gicv3/gicv3_basic.h	/^#define GICV3_SGI_TARGET_CPU1 /;"	d
GICV3_SGI_TARGET_CPU10	arch/aarch64/gicv3/gicv3_basic.h	/^#define GICV3_SGI_TARGET_CPU10 /;"	d
GICV3_SGI_TARGET_CPU11	arch/aarch64/gicv3/gicv3_basic.h	/^#define GICV3_SGI_TARGET_CPU11 /;"	d
GICV3_SGI_TARGET_CPU12	arch/aarch64/gicv3/gicv3_basic.h	/^#define GICV3_SGI_TARGET_CPU12 /;"	d
GICV3_SGI_TARGET_CPU13	arch/aarch64/gicv3/gicv3_basic.h	/^#define GICV3_SGI_TARGET_CPU13 /;"	d
GICV3_SGI_TARGET_CPU14	arch/aarch64/gicv3/gicv3_basic.h	/^#define GICV3_SGI_TARGET_CPU14 /;"	d
GICV3_SGI_TARGET_CPU15	arch/aarch64/gicv3/gicv3_basic.h	/^#define GICV3_SGI_TARGET_CPU15 /;"	d
GICV3_SGI_TARGET_CPU2	arch/aarch64/gicv3/gicv3_basic.h	/^#define GICV3_SGI_TARGET_CPU2 /;"	d
GICV3_SGI_TARGET_CPU3	arch/aarch64/gicv3/gicv3_basic.h	/^#define GICV3_SGI_TARGET_CPU3 /;"	d
GICV3_SGI_TARGET_CPU4	arch/aarch64/gicv3/gicv3_basic.h	/^#define GICV3_SGI_TARGET_CPU4 /;"	d
GICV3_SGI_TARGET_CPU5	arch/aarch64/gicv3/gicv3_basic.h	/^#define GICV3_SGI_TARGET_CPU5 /;"	d
GICV3_SGI_TARGET_CPU6	arch/aarch64/gicv3/gicv3_basic.h	/^#define GICV3_SGI_TARGET_CPU6 /;"	d
GICV3_SGI_TARGET_CPU7	arch/aarch64/gicv3/gicv3_basic.h	/^#define GICV3_SGI_TARGET_CPU7 /;"	d
GICV3_SGI_TARGET_CPU8	arch/aarch64/gicv3/gicv3_basic.h	/^#define GICV3_SGI_TARGET_CPU8 /;"	d
GICV3_SGI_TARGET_CPU9	arch/aarch64/gicv3/gicv3_basic.h	/^#define GICV3_SGI_TARGET_CPU9 /;"	d
GIC_BASE	arch/aarch64/inc/arch_gic.h	/^#define GIC_BASE /;"	d
GIC_REDIST_ID	arch/aarch64/inc/arch_gic.h	/^static uint64_t GIC_REDIST_ID = 0;$/;"	v	typeref:typename:uint64_t
GICv3_dist_if	arch/aarch64/gicv3/gicv3_registers.h	/^struct GICv3_dist_if$/;"	s
GICv3_its_ctlr_if	arch/aarch64/gicv3/gicv3_registers.h	/^struct GICv3_its_ctlr_if$/;"	s
GICv3_its_int_if	arch/aarch64/gicv3/gicv3_registers.h	/^struct GICv3_its_int_if$/;"	s
GICv3_its_sgi_if	arch/aarch64/gicv3/gicv3_registers.h	/^struct GICv3_its_sgi_if$/;"	s
GICv3_rdist_if	arch/aarch64/gicv3/gicv3_registers.h	/^struct GICv3_rdist_if$/;"	s
GICv3_rdist_lpis_if	arch/aarch64/gicv3/gicv3_registers.h	/^struct GICv3_rdist_lpis_if$/;"	s
GICv3_rdist_res_if	arch/aarch64/gicv3/gicv3_registers.h	/^struct GICv3_rdist_res_if$/;"	s
GICv3_rdist_sgis_if	arch/aarch64/gicv3/gicv3_registers.h	/^struct GICv3_rdist_sgis_if$/;"	s
GICv3_rdist_vlpis_if	arch/aarch64/gicv3/gicv3_registers.h	/^struct GICv3_rdist_vlpis_if$/;"	s
GITS_BASER	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint64_t GITS_BASER[8];         \/\/ +0x0100 - RW - Sets base address of Device and/;"	m	struct:GICv3_its_ctlr_if	typeref:typename:volatile uint64_t[8]
GITS_CBASER	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint64_t GITS_CBASER;           \/\/ +0x0080 - RW - Sets base address of ITS comman/;"	m	struct:GICv3_its_ctlr_if	typeref:typename:volatile uint64_t
GITS_CREADR	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint64_t GITS_CREADR;           \/\/ +0x0090 - RW - Points to command being process/;"	m	struct:GICv3_its_ctlr_if	typeref:typename:volatile uint64_t
GITS_CTLR	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint32_t GITS_CTLR;             \/\/ +0x0000 - RW - ITS Control Register$/;"	m	struct:GICv3_its_ctlr_if	typeref:typename:volatile uint32_t
GITS_CWRITER	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint64_t GITS_CWRITER;          \/\/ +0x0088 - RW - Points to next enrty to add com/;"	m	struct:GICv3_its_ctlr_if	typeref:typename:volatile uint64_t
GITS_IIDR	arch/aarch64/gicv3/gicv3_registers.h	/^    const volatile uint32_t GITS_IIDR;             \/\/ +0x0004 - RO - Implementer Identificatio/;"	m	struct:GICv3_its_ctlr_if	typeref:typename:const volatile uint32_t
GITS_IMPDEF	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint32_t GITS_IMPDEF[8];        \/\/ +0x0020 - RW - IMP DEF registers$/;"	m	struct:GICv3_its_ctlr_if	typeref:typename:volatile uint32_t[8]
GITS_MPAMIDR	arch/aarch64/gicv3/gicv3_registers.h	/^    const volatile uint32_t GITS_MPAMIDR;          \/\/ +0x0010 - RO - Reports maxmimum PARTID a/;"	m	struct:GICv3_its_ctlr_if	typeref:typename:const volatile uint32_t
GITS_MPIDR	arch/aarch64/gicv3/gicv3_registers.h	/^    const volatile uint32_t GITS_MPIDR;            \/\/ +0x0018 - RO - ITS affinity, used for sh/;"	m	struct:GICv3_its_ctlr_if	typeref:typename:const volatile uint32_t
GITS_PARTIDR	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint32_t GITS_PARTIDR;          \/\/ +0x0004 - RW - Sets the PARTID and PMG used fo/;"	m	struct:GICv3_its_ctlr_if	typeref:typename:volatile uint32_t
GITS_SGIR	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint64_t GITS_SGIR;             \/\/ +0x0020 - RW - Written by peripherals to gener/;"	m	struct:GICv3_its_sgi_if	typeref:typename:volatile uint64_t
GITS_TRANSLATER	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint32_t GITS_TRANSLATER;       \/\/ +0x0040 - RW - Written by peripherals to gener/;"	m	struct:GICv3_its_int_if	typeref:typename:volatile uint32_t
GITS_TYPER	arch/aarch64/gicv3/gicv3_registers.h	/^    const volatile uint64_t GITS_TYPER;            \/\/ +0x0008 - RO - ITS Type register$/;"	m	struct:GICv3_its_ctlr_if	typeref:typename:const volatile uint64_t
HYP_ERR	peripherals/inc/uart.h	/^#define HYP_ERR(/;"	d
HYP_LOG	peripherals/inc/uart.h	/^#define HYP_LOG(/;"	d
HYP_LOG_N	peripherals/inc/uart.h	/^#define HYP_LOG_N(/;"	d
IBRD	peripherals/inc/uart.h	/^	REG32 IBRD;                          $/;"	m	struct:PL011_REGS	typeref:typename:REG32
ICR	peripherals/inc/uart.h	/^	REG32 ICR;				            $/;"	m	struct:PL011_REGS	typeref:typename:REG32
IFLS	peripherals/inc/uart.h	/^	REG32 IFLS;				            $/;"	m	struct:PL011_REGS	typeref:typename:REG32
ILPR	peripherals/inc/uart.h	/^	REG32 ILPR;                          $/;"	m	struct:PL011_REGS	typeref:typename:REG32
IMP_DEF	arch/aarch64/gicv3/gicv3_registers.h	/^    volatile uint32_t IMP_DEF[8];             \/\/ +0x0020 - RW - Implementation defined registe/;"	m	struct:GICv3_dist_if	typeref:typename:volatile uint32_t[8]
IMSC	peripherals/inc/uart.h	/^	REG32 IMSC;				            $/;"	m	struct:PL011_REGS	typeref:typename:REG32
IMSC_RXIM	peripherals/inc/uart.h	/^#define IMSC_RXIM	/;"	d
IRQ_H	arch/aarch64/inc/irq.h	/^#define IRQ_H$/;"	d
LCRH	peripherals/inc/uart.h	/^	REG32 LCRH;                          $/;"	m	struct:PL011_REGS	typeref:typename:REG32
LCRH_FEN	peripherals/inc/uart.h	/^#define LCRH_FEN /;"	d
LD	Makefile	/^LD := $(CROSS_COMPILE)ld$/;"	m
LDFLAGS	Makefile	/^LDFLAGS :=$/;"	m
MIS	peripherals/inc/uart.h	/^	REG32 MIS;				            $/;"	m	struct:PL011_REGS	typeref:typename:REG32
NEXT_virtual_machine	hypervisor/inc/vm.h	/^struct virtual_machine* NEXT_virtual_machine;$/;"	v	typeref:struct:virtual_machine *
OBJCOPY	Makefile	/^OBJCOPY := $(CROSS_COMPILE)objcopy$/;"	m
OBJDUMP	Makefile	/^OBJDUMP := $(CROSS_COMPILE)objdump$/;"	m
PL011_REGS	peripherals/inc/uart.h	/^struct __attribute__((packed)) PL011_REGS$/;"	s
REG32	arch/aarch64/inc/regs.h	/^#define REG32 /;"	d
REG64	arch/aarch64/inc/regs.h	/^#define REG64 /;"	d
RIS	peripherals/inc/uart.h	/^	REG32 RIS;				            $/;"	m	struct:PL011_REGS	typeref:typename:REG32
RSRECR	peripherals/inc/uart.h	/^	REG32 RSRECR;                        $/;"	m	struct:PL011_REGS	typeref:typename:REG32
RSRECR_ERR_MASK	peripherals/inc/uart.h	/^#define RSRECR_ERR_MASK /;"	d
RX_INTERRUPT	peripherals/inc/uart.h	/^#define RX_INTERRUPT	/;"	d
SCHEDULER_WINDOW_SIZE	config.h	/^#define SCHEDULER_WINDOW_SIZE /;"	d
SERIAL_LINE	peripherals/inc/uart.h	/^#define SERIAL_LINE /;"	d
SERIAL_LINE_N	peripherals/inc/uart.h	/^#define SERIAL_LINE_N /;"	d
SERIAL_NEWLINE	peripherals/inc/uart.h	/^#define SERIAL_NEWLINE /;"	d
SREG64	arch/aarch64/inc/regs.h	/^#define SREG64 /;"	d
TEMP_REGSET	arch/aarch64/inc/regs.h	/^struct context_regs TEMP_REGSET;$/;"	v	typeref:struct:context_regs
TIMER_EL2_IRQ	arch/aarch64/inc/board.h	/^#define TIMER_EL2_IRQ /;"	d
TIMER_H	arch/aarch64/inc/generic_timer.h	/^#define TIMER_H$/;"	d
TIMER_IRQ	arch/aarch64/inc/board.h	/^#define TIMER_IRQ	/;"	d
TIMER_WAIT	arch/aarch64/inc/generic_timer.h	/^static uint64_t TIMER_WAIT = 2;$/;"	v	typeref:typename:uint64_t
TIME_SCHEDULES	config.h	/^const float TIME_SCHEDULES [SCHEDULER_WINDOW_SIZE] = {1,2,4,1,1};$/;"	v	typeref:typename:const float[]
TT_BLOCK	arch/aarch64/inc/ptable.h	/^#define TT_BLOCK /;"	d
TT_S2_AF	arch/aarch64/inc/ptable.h	/^#define TT_S2_AF /;"	d
TT_S2_DEVICE_nGnRnE	arch/aarch64/inc/ptable.h	/^#define TT_S2_DEVICE_nGnRnE /;"	d
TT_S2_INNER_SHARED	arch/aarch64/inc/ptable.h	/^#define TT_S2_INNER_SHARED /;"	d
TT_S2_NORMAL_WBWA	arch/aarch64/inc/ptable.h	/^#define TT_S2_NORMAL_WBWA /;"	d
TT_S2_RW	arch/aarch64/inc/ptable.h	/^#define TT_S2_RW /;"	d
UART_DEVICE	peripherals/inc/uart.h	/^static struct PL011_REGS* UART_DEVICE = (struct PL011_REGS*)0x09000000;$/;"	v	typeref:struct:PL011_REGS *
UART_IRQ	arch/aarch64/inc/board.h	/^#define UART_IRQ /;"	d
VIRT_GIC_CPU	arch/aarch64/inc/arch_gic.h	/^#define VIRT_GIC_CPU /;"	d
VIRT_GIC_DIST	arch/aarch64/inc/arch_gic.h	/^#define VIRT_GIC_DIST	/;"	d
VIRT_GIC_REDIST	arch/aarch64/inc/arch_gic.h	/^#define VIRT_GIC_REDIST /;"	d
WORK_DIR	Makefile	/^WORK_DIR := $(shell pwd)$/;"	m
__arch_acknowledge_interrupt	arch/aarch64/irq.c	/^uint32_t __arch_acknowledge_interrupt(void)$/;"	f	typeref:typename:uint32_t
__arch_disable_cnthp	arch/aarch64/inc/time_asm.h	/^static inline void __arch_disable_cnthp(void)$/;"	f	typeref:typename:void
__arch_disable_irq	arch/aarch64/irq.c	/^void __arch_disable_irq(void)$/;"	f	typeref:typename:void
__arch_elr_el1_read	arch/aarch64/inc/utils.h	/^static inline uint64_t __arch_elr_el1_read (void)$/;"	f	typeref:typename:uint64_t
__arch_elr_el2_read	arch/aarch64/inc/utils.h	/^static inline uint64_t __arch_elr_el2_read (void)$/;"	f	typeref:typename:uint64_t
__arch_elr_spsr_el1_read	arch/aarch64/inc/utils.h	/^static inline uint64_t __arch_elr_spsr_el1_read (void)$/;"	f	typeref:typename:uint64_t
__arch_elr_spsr_el2_read	arch/aarch64/inc/utils.h	/^static inline uint64_t __arch_elr_spsr_el2_read (void)$/;"	f	typeref:typename:uint64_t
__arch_enable_cnthp	arch/aarch64/inc/time_asm.h	/^static inline void __arch_enable_cnthp(void)$/;"	f	typeref:typename:void
__arch_enable_irq	arch/aarch64/irq.c	/^void __arch_enable_irq(void)$/;"	f	typeref:typename:void
__arch_end_of_interrupt	arch/aarch64/irq.c	/^void __arch_end_of_interrupt(uint64_t _irq_num)$/;"	f	typeref:typename:void
__arch_read_cntfrq_el0	arch/aarch64/inc/time_asm.h	/^static inline uint32_t __arch_read_cntfrq_el0(void)$/;"	f	typeref:typename:uint32_t
__arch_read_cnthp_ctl_el2	arch/aarch64/inc/time_asm.h	/^static inline uint32_t __arch_read_cnthp_ctl_el2(void)$/;"	f	typeref:typename:uint32_t
__arch_read_cntpct_el0	arch/aarch64/inc/time_asm.h	/^static inline uint32_t __arch_read_cntpct_el0(void)$/;"	f	typeref:typename:uint32_t
__arch_read_current_el	arch/aarch64/inc/utils.h	/^static inline uint64_t __arch_read_current_el (void)$/;"	f	typeref:typename:uint64_t
__arch_register_read	arch/aarch64/inc/utils.h	/^static inline uint64_t __arch_register_read (REG64 reg)$/;"	f	typeref:typename:uint64_t
__arch_wfi	arch/aarch64/inc/utils.h	/^#define __arch_wfi(/;"	d
__arch_write_cnthp_cval_el2	arch/aarch64/inc/time_asm.h	/^void __arch_write_cnthp_cval_el2(uint64_t cntv_cval_el0)$/;"	f	typeref:typename:void
__dsb	arch/aarch64/gicv3/gicv3_basic.c	/^static __inline void __dsb(void)$/;"	f	typeref:typename:void	file:
__empty0__	peripherals/inc/uart.h	/^	REG32 __empty0__[4];                 $/;"	m	struct:PL011_REGS	typeref:typename:REG32[4]
__empty1__	peripherals/inc/uart.h	/^	REG32 __empty1__;                    $/;"	m	struct:PL011_REGS	typeref:typename:REG32
__gicv3_h	arch/aarch64/gicv3/gicv3_basic.h	/^#define __gicv3_h$/;"	d
__gicv3_regs_h	arch/aarch64/gicv3/gicv3_registers.h	/^#define __gicv3_regs_h$/;"	d
__stack_chk_fail	arch/aarch64/stack_guard.c	/^void __stack_chk_fail(void)$/;"	f	typeref:typename:void
__stack_chk_guard	arch/aarch64/stack_guard.c	/^unsigned long __stack_chk_guard;$/;"	v	typeref:typename:unsigned long
__stack_chk_guard_setup	arch/aarch64/stack_guard.c	/^void __stack_chk_guard_setup(void)$/;"	f	typeref:typename:void
asm_enable_hypervisor	arch/aarch64/vm_control.S	/^asm_enable_hypervisor:$/;"	l
asm_save_vcpu	arch/aarch64/vm_control.S	/^asm_save_vcpu:$/;"	l
asm_start_vm	arch/aarch64/vm_control.S	/^asm_start_vm:$/;"	l
av_config	config.h	/^#define av_config$/;"	d
bcmp	libc/string.c	/^int bcmp(const void *a, const void *b, size_t len)$/;"	f	typeref:typename:int
build	cook.sh	/^build() {$/;"	f
clean	cook.sh	/^clean() {$/;"	f
clearIntPending	arch/aarch64/gicv3/gicv3_basic.c	/^uint32_t clearIntPending(uint32_t ID, uint32_t rd)$/;"	f	typeref:typename:uint32_t
cntfrq	arch/aarch64/generic_timer.c	/^static uint64_t cntfrq = 0;$/;"	v	typeref:typename:uint64_t	file:
context_regs	arch/aarch64/inc/regs.h	/^struct context_regs$/;"	s
counter	arch/aarch64/handler.c	/^static unsigned counter = 0;$/;"	v	typeref:typename:unsigned	file:
disableGroup0Ints	arch/aarch64/gicv3/gicv3_cpuif.S	/^disableGroup0Ints:$/;"	l
disableGroup1Ints	arch/aarch64/gicv3/gicv3_cpuif.S	/^disableGroup1Ints:$/;"	l
disableInt	arch/aarch64/gicv3/gicv3_basic.c	/^uint32_t disableInt(uint32_t ID, uint32_t rd)$/;"	f	typeref:typename:uint32_t
disableNSGroup1Ints	arch/aarch64/gicv3/gicv3_cpuif.S	/^disableNSGroup1Ints:$/;"	l
elr_el2	arch/aarch64/inc/arch_vcpu.h	/^    SREG64 elr_el2;$/;"	m	struct:vcpu	typeref:typename:SREG64
enableGIC	arch/aarch64/gicv3/gicv3_basic.c	/^uint32_t enableGIC(void)$/;"	f	typeref:typename:uint32_t
enableGroup0Ints	arch/aarch64/gicv3/gicv3_cpuif.S	/^enableGroup0Ints:$/;"	l
enableGroup1Ints	arch/aarch64/gicv3/gicv3_cpuif.S	/^enableGroup1Ints:$/;"	l
enableInt	arch/aarch64/gicv3/gicv3_basic.c	/^uint32_t enableInt(uint32_t ID, uint32_t rd)$/;"	f	typeref:typename:uint32_t
enableNSGroup1Ints	arch/aarch64/gicv3/gicv3_cpuif.S	/^enableNSGroup1Ints:$/;"	l
entry_point	arch/aarch64/inc/arch_vm.h	/^    uint64_t entry_point;$/;"	m	struct:virtual_machine	typeref:typename:uint64_t
getAffinity	arch/aarch64/gicv3/gicv3_cpuif.S	/^getAffinity:$/;"	l
getBPR0	arch/aarch64/gicv3/gicv3_cpuif.S	/^getBPR0:$/;"	l
getBPR1	arch/aarch64/gicv3/gicv3_cpuif.S	/^getBPR1:$/;"	l
getExtPPI	arch/aarch64/gicv3/gicv3_basic.c	/^uint32_t getExtPPI(uint32_t rd)$/;"	f	typeref:typename:uint32_t
getExtSPI	arch/aarch64/gicv3/gicv3_basic.c	/^uint32_t getExtSPI(void)$/;"	f	typeref:typename:uint32_t
getRedistID	arch/aarch64/gicv3/gicv3_basic.c	/^uint32_t getRedistID(uint32_t affinity)$/;"	f	typeref:typename:uint32_t
getRunningPriority	arch/aarch64/gicv3/gicv3_cpuif.S	/^getRunningPriority:$/;"	l
getSPI	arch/aarch64/gicv3/gicv3_basic.c	/^uint32_t getSPI(void)$/;"	f	typeref:typename:uint32_t
get_current_vm	hypervisor/vm.c	/^struct virtual_machine* get_current_vm()$/;"	f	typeref:struct:virtual_machine *
gets3_0_c12_c12_4	arch/aarch64/gicv3/gicv3_cpuif.S	/^gets3_0_c12_c12_4:$/;"	l
gets3_0_c12_c12_5	arch/aarch64/gicv3/gicv3_cpuif.S	/^gets3_0_c12_c12_5:$/;"	l
gets3_4_c12_c9_5	arch/aarch64/gicv3/gicv3_cpuif.S	/^gets3_4_c12_c9_5:$/;"	l
gets3_6_c12_c12_4	arch/aarch64/gicv3/gicv3_cpuif.S	/^gets3_6_c12_c12_4:$/;"	l
gets3_6_c12_c12_5	arch/aarch64/gicv3/gicv3_cpuif.S	/^gets3_6_c12_c12_5:$/;"	l
gic_addr_valid	arch/aarch64/gicv3/gicv3_basic.c	/^static uint32_t gic_addr_valid = 0;$/;"	v	typeref:typename:uint32_t	file:
gic_dist	arch/aarch64/gicv3/gicv3_basic.c	/^struct GICv3_dist_if*       gic_dist;$/;"	v	typeref:struct:GICv3_dist_if *
gic_init	arch/aarch64/arch_gic.c	/^void gic_init(void)$/;"	f	typeref:typename:void
gic_max_rd	arch/aarch64/gicv3/gicv3_basic.c	/^static uint32_t gic_max_rd = 0;$/;"	v	typeref:typename:uint32_t	file:
gic_rdist	arch/aarch64/gicv3/gicv3_basic.c	/^struct GICv3_rdist_if*      gic_rdist;$/;"	v	typeref:struct:GICv3_rdist_if *
gic_register_device	arch/aarch64/arch_gic.c	/^void gic_register_device(uint64_t _device_id)$/;"	f	typeref:typename:void
hyp_start_sched	hypervisor/scheduler.c	/^int hyp_start_sched()$/;"	f	typeref:typename:int
hypervisor_enable_interrupts	hypervisor/hypervisor.c	/^void hypervisor_enable_interrupts(void)$/;"	f	typeref:typename:void
hypervisor_init	hypervisor/hypervisor.c	/^void hypervisor_init()$/;"	f	typeref:typename:void
hypervisor_set_interrupts	hypervisor/hypervisor.c	/^void hypervisor_set_interrupts(void)$/;"	f	typeref:typename:void
interrupt_handler	arch/aarch64/handler.c	/^void interrupt_handler()$/;"	f	typeref:typename:void
interrupt_handler_a	arch/aarch64/exception.S	/^interrupt_handler_a:$/;"	l
isValidExtPPI	arch/aarch64/gicv3/gicv3_basic.c	/^static uint32_t isValidExtPPI(uint32_t rd, uint32_t ID)$/;"	f	typeref:typename:uint32_t	file:
isValidExtSPI	arch/aarch64/gicv3/gicv3_basic.c	/^static uint32_t isValidExtSPI(uint32_t ID)$/;"	f	typeref:typename:uint32_t	file:
load_guest_vm	hypervisor/loader.c	/^void load_guest_vm(struct virtual_machine *_vm, long offset)$/;"	f	typeref:typename:void
lower_32_fiq	arch/aarch64/exception.S	/^lower_32_fiq:         b       interrupt_handler_a$/;"	l
lower_32_irq	arch/aarch64/exception.S	/^lower_32_irq:         b       interrupt_handler_a$/;"	l
lower_32_serror	arch/aarch64/exception.S	/^lower_32_serror:      b       interrupt_handler_a$/;"	l
lower_32_sync	arch/aarch64/exception.S	/^lower_32_sync:        b       interrupt_handler_a$/;"	l
lower_64_fiq	arch/aarch64/exception.S	/^lower_64_fiq:         b       asm_save_vcpu$/;"	l
lower_64_irq	arch/aarch64/exception.S	/^lower_64_irq:         b       interrupt_handler_a$/;"	l
lower_64_serror	arch/aarch64/exception.S	/^lower_64_serror:      b       interrupt_handler_a$/;"	l
lower_64_sync	arch/aarch64/exception.S	/^lower_64_sync:        b       interrupt_handler_a$/;"	l
lower_exception_level	arch/aarch64/exception.S	/^lower_exception_level:$/;"	l
lpis	arch/aarch64/gicv3/gicv3_registers.h	/^    struct GICv3_rdist_lpis_if   lpis  __attribute__((aligned (0x10000)));$/;"	m	struct:GICv3_rdist_if	typeref:struct:GICv3_rdist_lpis_if
main	cook.sh	/^main() {$/;"	f
main	main.c	/^int main()$/;"	f	typeref:typename:int
match_string	libc/string.c	/^int match_string(const char * const *array, size_t n, const char *string)$/;"	f	typeref:typename:int
memchr	libc/string.c	/^void *memchr(const void *s, int c, size_t n)$/;"	f	typeref:typename:void *
memcmp	libc/string.c	/^int memcmp(const void *cs, const void *ct, size_t count)$/;"	f	typeref:typename:int
memcpy	libc/string.c	/^void *memcpy(void *dest, const void *src, size_t count)$/;"	f	typeref:typename:void *
memmove	libc/string.c	/^void *memmove(void *dest, const void *src, size_t count)$/;"	f	typeref:typename:void *
memory_region	arch/aarch64/inc/arch_vm.h	/^    uint64_t memory_region;$/;"	m	struct:virtual_machine	typeref:typename:uint64_t
memscan	libc/string.c	/^void *memscan(void *addr, int c, size_t size)$/;"	f	typeref:typename:void *
memset	libc/string.c	/^void *memset(void *s, int c, size_t count)$/;"	f	typeref:typename:void *
memset16	libc/string.c	/^void *memset16(uint16_t *s, uint16_t v, size_t count)$/;"	f	typeref:typename:void *
memset32	libc/string.c	/^void *memset32(uint32_t *s, uint32_t v, size_t count)$/;"	f	typeref:typename:void *
memset64	libc/string.c	/^void *memset64(uint64_t *s, uint64_t v, size_t count)$/;"	f	typeref:typename:void *
padding0	arch/aarch64/gicv3/gicv3_registers.h	/^    const volatile uint32_t padding0;               \/\/ +0x000C - RESERVED$/;"	m	struct:GICv3_dist_if	typeref:typename:const volatile uint32_t
padding1	arch/aarch64/gicv3/gicv3_registers.h	/^    const volatile uint32_t padding1[16];          \/\/ +0x0000 - RESERVED$/;"	m	struct:GICv3_its_int_if	typeref:typename:const volatile uint32_t[16]
padding1	arch/aarch64/gicv3/gicv3_registers.h	/^    const volatile uint32_t padding1[28];          \/\/ +0x0000 - RESERVED$/;"	m	struct:GICv3_rdist_vlpis_if	typeref:typename:const volatile uint32_t[28]
padding1	arch/aarch64/gicv3/gicv3_registers.h	/^    const volatile uint32_t padding1[32];          \/\/ +0x0000 - RESERVED$/;"	m	struct:GICv3_rdist_res_if	typeref:typename:const volatile uint32_t[32]
padding1	arch/aarch64/gicv3/gicv3_registers.h	/^    const volatile uint32_t padding1[32];          \/\/ +0x0000 - RESERVED$/;"	m	struct:GICv3_rdist_sgis_if	typeref:typename:const volatile uint32_t[32]
padding1	arch/aarch64/gicv3/gicv3_registers.h	/^    const volatile uint32_t padding1[3];            \/\/ +0x0014 - RESERVED$/;"	m	struct:GICv3_dist_if	typeref:typename:const volatile uint32_t[3]
padding1	arch/aarch64/gicv3/gicv3_registers.h	/^    const volatile uint32_t padding1[8];           \/\/ +0x0000 - RESERVED$/;"	m	struct:GICv3_its_sgi_if	typeref:typename:const volatile uint32_t[8]
padding1	arch/aarch64/gicv3/gicv3_registers.h	/^    const volatile uint32_t padding1[8];           \/\/ +0x0020 - RESERVED$/;"	m	struct:GICv3_rdist_lpis_if	typeref:typename:const volatile uint32_t[8]
padding10	arch/aarch64/gicv3/gicv3_registers.h	/^    const volatile uint32_t padding10[128];         \/\/ +0x1E00 - RESERVED$/;"	m	struct:GICv3_dist_if	typeref:typename:const volatile uint32_t[128]
padding10	arch/aarch64/gicv3/gicv3_registers.h	/^    const volatile uint32_t padding10[2];          \/\/ +0x0118 - RESERVED$/;"	m	struct:GICv3_rdist_lpis_if	typeref:typename:const volatile uint32_t[2]
padding10	arch/aarch64/gicv3/gicv3_registers.h	/^    const volatile uint32_t padding10[58];	 \/\/ +0x0C18 - RESERVED$/;"	m	struct:GICv3_rdist_sgis_if	typeref:typename:const volatile uint32_t[58]
padding11	arch/aarch64/gicv3/gicv3_registers.h	/^    const volatile uint32_t padding11[2432];        \/\/ +0x3A00 - RESERVED$/;"	m	struct:GICv3_dist_if	typeref:typename:const volatile uint32_t[2432]
padding11	arch/aarch64/gicv3/gicv3_registers.h	/^    const volatile uint32_t padding11[61];	 \/\/ +0x0D0C - RESERVED$/;"	m	struct:GICv3_rdist_sgis_if	typeref:typename:const volatile uint32_t[61]
padding2	arch/aarch64/gicv3/gicv3_registers.h	/^    const volatile uint32_t padding2;               \/\/ +0x0044 - RESERVED$/;"	m	struct:GICv3_dist_if	typeref:typename:const volatile uint32_t
padding2	arch/aarch64/gicv3/gicv3_registers.h	/^    const volatile uint32_t padding2[16];          \/\/ +0x0040 - RESERVED$/;"	m	struct:GICv3_its_ctlr_if	typeref:typename:const volatile uint32_t[16]
padding2	arch/aarch64/gicv3/gicv3_registers.h	/^    const volatile uint32_t padding2[29];          \/\/ +0x008C - RESERVED$/;"	m	struct:GICv3_rdist_sgis_if	typeref:typename:const volatile uint32_t[29]
padding2	arch/aarch64/gicv3/gicv3_registers.h	/^    const volatile uint32_t padding2[6];           \/\/ +0x0058 - RESERVED$/;"	m	struct:GICv3_rdist_lpis_if	typeref:typename:const volatile uint32_t[6]
padding3	arch/aarch64/gicv3/gicv3_registers.h	/^    const volatile uint32_t padding3;               \/\/ +0x004C - RESERVED$/;"	m	struct:GICv3_dist_if	typeref:typename:const volatile uint32_t
padding3	arch/aarch64/gicv3/gicv3_registers.h	/^    const volatile uint32_t padding3;              \/\/ +0x006C - RESERVED$/;"	m	struct:GICv3_rdist_lpis_if	typeref:typename:const volatile uint32_t
padding3	arch/aarch64/gicv3/gicv3_registers.h	/^    const volatile uint32_t padding3[29];          \/\/ +0x010C - RESERVED$/;"	m	struct:GICv3_rdist_sgis_if	typeref:typename:const volatile uint32_t[29]
padding3	arch/aarch64/gicv3/gicv3_registers.h	/^    const volatile uint32_t padding3[2];           \/\/ +0x0098 - RESERVED$/;"	m	struct:GICv3_its_ctlr_if	typeref:typename:const volatile uint32_t[2]
padding4	arch/aarch64/gicv3/gicv3_registers.h	/^    const volatile uint32_t padding4;               \/\/ +0x0054 - RESERVED$/;"	m	struct:GICv3_dist_if	typeref:typename:const volatile uint32_t
padding4	arch/aarch64/gicv3/gicv3_registers.h	/^    const volatile uint32_t padding4[24];          \/\/ +0x00A0 - RESERVED$/;"	m	struct:GICv3_its_ctlr_if	typeref:typename:const volatile uint32_t[24]
padding4	arch/aarch64/gicv3/gicv3_registers.h	/^    const volatile uint32_t padding4[29];          \/\/ +0x018C - RESERVED$/;"	m	struct:GICv3_rdist_sgis_if	typeref:typename:const volatile uint32_t[29]
padding4	arch/aarch64/gicv3/gicv3_registers.h	/^    const volatile uint32_t padding4[8];           \/\/ +0x0080 - RESERVED$/;"	m	struct:GICv3_rdist_lpis_if	typeref:typename:const volatile uint32_t[8]
padding5	arch/aarch64/gicv3/gicv3_registers.h	/^    const volatile uint32_t padding5;              \/\/ +0x001C - RESERVED$/;"	m	struct:GICv3_its_ctlr_if	typeref:typename:const volatile uint32_t
padding5	arch/aarch64/gicv3/gicv3_registers.h	/^    const volatile uint32_t padding5[29];          \/\/ +0x020C - RESERVED$/;"	m	struct:GICv3_rdist_sgis_if	typeref:typename:const volatile uint32_t[29]
padding5	arch/aarch64/gicv3/gicv3_registers.h	/^    const volatile uint32_t padding5[2];           \/\/ +0x00A8 - RESERVED$/;"	m	struct:GICv3_rdist_lpis_if	typeref:typename:const volatile uint32_t[2]
padding5	arch/aarch64/gicv3/gicv3_registers.h	/^    const volatile uint32_t padding5[3];            \/\/ +0x005C - RESERVED$/;"	m	struct:GICv3_dist_if	typeref:typename:const volatile uint32_t[3]
padding6	arch/aarch64/gicv3/gicv3_registers.h	/^    const volatile uint32_t padding6[29];          \/\/ +0x028C - RESERVED$/;"	m	struct:GICv3_rdist_sgis_if	typeref:typename:const volatile uint32_t[29]
padding6	arch/aarch64/gicv3/gicv3_registers.h	/^    const volatile uint32_t padding6[2];           \/\/ +0x00B8 - RESERVED$/;"	m	struct:GICv3_rdist_lpis_if	typeref:typename:const volatile uint32_t[2]
padding6	arch/aarch64/gicv3/gicv3_registers.h	/^    const volatile uint32_t padding6[5];            \/\/ +0x006C - RESERVED$/;"	m	struct:GICv3_dist_if	typeref:typename:const volatile uint32_t[5]
padding7	arch/aarch64/gicv3/gicv3_registers.h	/^    const volatile uint32_t padding7[29];          \/\/ +0x030C - RESERVED$/;"	m	struct:GICv3_rdist_sgis_if	typeref:typename:const volatile uint32_t[29]
padding7	arch/aarch64/gicv3/gicv3_registers.h	/^    const volatile uint32_t padding7[2];           \/\/ +0x00C8 - RESERVED$/;"	m	struct:GICv3_rdist_lpis_if	typeref:typename:const volatile uint32_t[2]
padding7	arch/aarch64/gicv3/gicv3_registers.h	/^    const volatile uint32_t padding7[32];           \/\/ +0x0D80 - RESERVED$/;"	m	struct:GICv3_dist_if	typeref:typename:const volatile uint32_t[32]
padding8	arch/aarch64/gicv3/gicv3_registers.h	/^    const volatile uint32_t padding8[12];          \/\/ +0x00D0 - RESERVED$/;"	m	struct:GICv3_rdist_lpis_if	typeref:typename:const volatile uint32_t[12]
padding8	arch/aarch64/gicv3/gicv3_registers.h	/^    const volatile uint32_t padding8[29];          \/\/ +0x018C - RESERVED$/;"	m	struct:GICv3_rdist_sgis_if	typeref:typename:const volatile uint32_t[29]
padding8	arch/aarch64/gicv3/gicv3_registers.h	/^    const volatile uint32_t padding8[3];            \/\/ +0x0F04 - RESERVED$/;"	m	struct:GICv3_dist_if	typeref:typename:const volatile uint32_t[3]
padding9	arch/aarch64/gicv3/gicv3_registers.h	/^    const volatile uint32_t padding9[2];           \/\/ +0x0108 - RESERVED$/;"	m	struct:GICv3_rdist_lpis_if	typeref:typename:const volatile uint32_t[2]
padding9	arch/aarch64/gicv3/gicv3_registers.h	/^    const volatile uint32_t padding9[488];         \/\/ +0x0460 - RESERVED$/;"	m	struct:GICv3_rdist_sgis_if	typeref:typename:const volatile uint32_t[488]
padding9	arch/aarch64/gicv3/gicv3_registers.h	/^    const volatile uint32_t padding9[52];           \/\/ +0x0F30 - RESERVED$/;"	m	struct:GICv3_dist_if	typeref:typename:const volatile uint32_t[52]
pc	arch/aarch64/inc/arch_vcpu.h	/^    SREG64 pc;$/;"	m	struct:vcpu	typeref:typename:SREG64
pt_s2_l1_vm1	arch/aarch64/inc/ptable.h	/^unsigned long pt_s2_l1_vm1 [512]            __attribute__ ((aligned (4096)));$/;"	v	typeref:typename:unsigned long[512]
pt_s2_l1_vm2	arch/aarch64/inc/ptable.h	/^unsigned long pt_s2_l1_vm2 [512]            __attribute__ ((aligned (4096)));$/;"	v	typeref:typename:unsigned long[512]
readIARGrp0	arch/aarch64/gicv3/gicv3_cpuif.S	/^readIARGrp0:$/;"	l
readIARGrp1	arch/aarch64/gicv3/gicv3_cpuif.S	/^readIARGrp1:$/;"	l
register_vm	hypervisor/vm.c	/^void register_vm(struct virtual_machine* _vm)$/;"	f	typeref:typename:void
regset	arch/aarch64/inc/arch_vcpu.h	/^    struct context_regs regset;$/;"	m	struct:vcpu	typeref:struct:context_regs
res	arch/aarch64/gicv3/gicv3_registers.h	/^    struct GICv3_rdist_res_if    res   __attribute__((aligned (0x10000)));$/;"	m	struct:GICv3_rdist_if	typeref:struct:GICv3_rdist_res_if
schedule_start	hypervisor/scheduler.c	/^void schedule_start()$/;"	f	typeref:typename:void
schedule_switch_order	hypervisor/scheduler.c	/^void schedule_switch_order()$/;"	f	typeref:typename:void
sendGroup0SGI	arch/aarch64/gicv3/gicv3_cpuif.S	/^sendGroup0SGI:$/;"	l
sendGroup1SGI	arch/aarch64/gicv3/gicv3_cpuif.S	/^sendGroup1SGI:$/;"	l
sendOtherGroup1SGI	arch/aarch64/gicv3/gicv3_cpuif.S	/^sendOtherGroup1SGI:$/;"	l
setBPR0	arch/aarch64/gicv3/gicv3_cpuif.S	/^setBPR0:$/;"	l
setBPR1	arch/aarch64/gicv3/gicv3_cpuif.S	/^setBPR1:$/;"	l
setGICAddr	arch/aarch64/gicv3/gicv3_basic.c	/^void setGICAddr(void* dist, void* rdist)$/;"	f	typeref:typename:void
setIntGroup	arch/aarch64/gicv3/gicv3_basic.c	/^uint32_t setIntGroup(uint32_t ID, uint32_t rd, uint32_t security)$/;"	f	typeref:typename:uint32_t
setIntPending	arch/aarch64/gicv3/gicv3_basic.c	/^uint32_t setIntPending(uint32_t ID, uint32_t rd)$/;"	f	typeref:typename:uint32_t
setIntPriority	arch/aarch64/gicv3/gicv3_basic.c	/^uint32_t setIntPriority(uint32_t ID, uint32_t rd, uint8_t priority)$/;"	f	typeref:typename:uint32_t
setIntRoute	arch/aarch64/gicv3/gicv3_basic.c	/^uint32_t setIntRoute(uint32_t ID, uint32_t mode, uint32_t affinity)$/;"	f	typeref:typename:uint32_t
setIntType	arch/aarch64/gicv3/gicv3_basic.c	/^uint32_t setIntType(uint32_t ID, uint32_t rd, uint32_t type)$/;"	f	typeref:typename:uint32_t
setPriorityMask	arch/aarch64/gicv3/gicv3_cpuif.S	/^setPriorityMask:$/;"	l
set_current_vm	hypervisor/vm.c	/^struct virtual_machine* set_current_vm(struct virtual_machine* _vm)$/;"	f	typeref:struct:virtual_machine *
set_el2_timer_sec	arch/aarch64/generic_timer.c	/^void set_el2_timer_sec(uint64_t _sec)$/;"	f	typeref:typename:void
sets3_0_c12_c12_4	arch/aarch64/gicv3/gicv3_cpuif.S	/^sets3_0_c12_c12_4:$/;"	l
sets3_0_c12_c12_5	arch/aarch64/gicv3/gicv3_cpuif.S	/^sets3_0_c12_c12_5:$/;"	l
sets3_4_c12_c9_5	arch/aarch64/gicv3/gicv3_cpuif.S	/^sets3_4_c12_c9_5:$/;"	l
sets3_6_c12_c12_4	arch/aarch64/gicv3/gicv3_cpuif.S	/^sets3_6_c12_c12_4:$/;"	l
sets3_6_c12_c12_5	arch/aarch64/gicv3/gicv3_cpuif.S	/^sets3_6_c12_c12_5:$/;"	l
setup_vm1_stage2_level1	arch/aarch64/ptable.c	/^void setup_vm1_stage2_level1()$/;"	f	typeref:typename:void
setup_vm2_stage2_level1	arch/aarch64/ptable.c	/^void setup_vm2_stage2_level1()$/;"	f	typeref:typename:void
sgis	arch/aarch64/gicv3/gicv3_registers.h	/^    struct GICv3_rdist_sgis_if   sgis  __attribute__((aligned (0x10000)));$/;"	m	struct:GICv3_rdist_if	typeref:struct:GICv3_rdist_sgis_if
skip_spaces	libc/string.c	/^char *skip_spaces(const char *str)$/;"	f	typeref:typename:char *
sp_el0_fiq	arch/aarch64/exception.S	/^sp_el0_fiq:         b       interrupt_handler_a$/;"	l
sp_el0_irq	arch/aarch64/exception.S	/^sp_el0_irq:         b       interrupt_handler_a$/;"	l
sp_el0_serror	arch/aarch64/exception.S	/^sp_el0_serror:      b       interrupt_handler_a$/;"	l
sp_el0_sync	arch/aarch64/exception.S	/^sp_el0_sync:        b       start$/;"	l
sp_el1	arch/aarch64/inc/arch_vcpu.h	/^    SREG64 sp_el1;$/;"	m	struct:vcpu	typeref:typename:SREG64
sp_elx_fiq	arch/aarch64/exception.S	/^sp_elx_fiq:         b       interrupt_handler_a$/;"	l
sp_elx_irq	arch/aarch64/exception.S	/^sp_elx_irq:         b       interrupt_handler_a$/;"	l
sp_elx_serror	arch/aarch64/exception.S	/^sp_elx_serror:      b       interrupt_handler_a$/;"	l
sp_elx_sync	arch/aarch64/exception.S	/^sp_elx_sync:        b       interrupt_handler_a$/;"	l
spsr_el1	arch/aarch64/inc/arch_vcpu.h	/^    SREG64 spsr_el1;$/;"	m	struct:vcpu	typeref:typename:SREG64
start	arch/aarch64/start.S	/^start:$/;"	l
strcat	libc/string.c	/^char *strcat(char *dest, const char *src)$/;"	f	typeref:typename:char *
strchr	libc/string.c	/^char *strchr(const char *s, int c)$/;"	f	typeref:typename:char *
strchrnul	libc/string.c	/^char *strchrnul(const char *s, int c)$/;"	f	typeref:typename:char *
strcmp	libc/string.c	/^int strcmp(const char *cs, const char *ct)$/;"	f	typeref:typename:int
strcpy	libc/inc/string.h	/^char *strcpy(char *dest, const char *src);;$/;"	t	typeref:typename:size_t unsigned long char * ()(char * dest,const char * src)
strcpy	libc/string.c	/^char *strcpy(char *dest, const char *src)$/;"	f	typeref:typename:char *
strcspn	libc/string.c	/^size_t strcspn(const char *s, const char *reject)$/;"	f	typeref:typename:size_t
strim	libc/string.c	/^char *strim(char *s)$/;"	f	typeref:typename:char *
strlcat	libc/string.c	/^size_t strlcat(char *dest, const char *src, size_t count)$/;"	f	typeref:typename:size_t
strlcpy	libc/string.c	/^size_t strlcpy(char *dest, const char *src, size_t size)$/;"	f	typeref:typename:size_t
strlen	libc/string.c	/^size_t strlen(const char *s)$/;"	f	typeref:typename:size_t
strncat	libc/string.c	/^char *strncat(char *dest, const char *src, size_t count)$/;"	f	typeref:typename:char *
strnchr	libc/string.c	/^char *strnchr(const char *s, size_t count, int c)$/;"	f	typeref:typename:char *
strnchrnul	libc/string.c	/^char *strnchrnul(const char *s, size_t count, int c)$/;"	f	typeref:typename:char *
strncmp	libc/string.c	/^int strncmp(const char *cs, const char *ct, size_t count)$/;"	f	typeref:typename:int
strncpy	libc/string.c	/^char *strncpy(char *dest, const char *src, size_t count)$/;"	f	typeref:typename:char *
strnlen	libc/string.c	/^size_t strnlen(const char *s, size_t count)$/;"	f	typeref:typename:size_t
strnstr	libc/string.c	/^char *strnstr(const char *s1, const char *s2, size_t len)$/;"	f	typeref:typename:char *
strpbrk	libc/string.c	/^char *strpbrk(const char *cs, const char *ct)$/;"	f	typeref:typename:char *
strrchr	libc/string.c	/^char *strrchr(const char *s, int c)$/;"	f	typeref:typename:char *
strreplace	libc/string.c	/^char *strreplace(char *s, char old, char new)$/;"	f	typeref:typename:char *
strsep	libc/string.c	/^char *strsep(char **s, const char *ct)$/;"	f	typeref:typename:char *
strspn	libc/string.c	/^size_t strspn(const char *s, const char *accept)$/;"	f	typeref:typename:size_t
strstr	libc/string.c	/^char *strstr(const char *s1, const char *s2)$/;"	f	typeref:typename:char *
timer_el2_init	arch/aarch64/generic_timer.c	/^void timer_el2_init(void)$/;"	f	typeref:typename:void
timer_handler2	arch/aarch64/generic_timer.c	/^void timer_handler2(void)$/;"	f	typeref:typename:void
uart_enable_interrupts	peripherals/uart.c	/^void uart_enable_interrupts()$/;"	f	typeref:typename:void
uart_handler	peripherals/uart.c	/^void uart_handler(void)$/;"	f	typeref:typename:void
uart_print_char	peripherals/uart.c	/^void uart_print_char(const char c)$/;"	f	typeref:typename:void
uart_print_hex	peripherals/uart.c	/^void uart_print_hex(uint64_t n)$/;"	f	typeref:typename:void
uart_print_register	peripherals/uart.c	/^void uart_print_register(const char *s,uint64_t n)$/;"	f	typeref:typename:void
uart_print_register_colon	peripherals/uart.c	/^void uart_print_register_colon(const char *s, uint64_t n,$/;"	f	typeref:typename:void
uart_print_string	peripherals/uart.c	/^void uart_print_string(const char *s)$/;"	f	typeref:typename:void
vcpu	arch/aarch64/inc/arch_vcpu.h	/^struct vcpu$/;"	s
vcpu0	arch/aarch64/inc/arch_vm.h	/^    struct vcpu vcpu0;$/;"	m	struct:virtual_machine	typeref:struct:vcpu
vcpu1	main.c	/^struct vcpu vcpu1;$/;"	v	typeref:struct:vcpu
vcpu_print_registers	hypervisor/vcpu.c	/^void vcpu_print_registers(struct VCPU* _vcpu)$/;"	f	typeref:typename:void
vcpu_restore	arch/aarch64/arch_vcpu.c	/^void vcpu_restore(struct VCPU* _vcpu, struct REGISTER_SET* _regset)$/;"	f	typeref:typename:void
vcpu_restore_current	arch/aarch64/arch_vcpu.c	/^void vcpu_restore_current()$/;"	f	typeref:typename:void
vcpu_save	arch/aarch64/arch_vcpu.c	/^void vcpu_save(struct VCPU* _vcpu, struct REGISTER_SET* _regset)$/;"	f	typeref:typename:void
vcpu_save_current	arch/aarch64/arch_vcpu.c	/^void vcpu_save_current()$/;"	f	typeref:typename:void
vector	arch/aarch64/exception.S	/^vector:$/;"	l
virtual_machine	arch/aarch64/inc/arch_vm.h	/^struct virtual_machine$/;"	s
vlpis	arch/aarch64/gicv3/gicv3_registers.h	/^    struct GICv3_rdist_vlpis_if  vlpis __attribute__((aligned (0x10000)));$/;"	m	struct:GICv3_rdist_if	typeref:struct:GICv3_rdist_vlpis_if
vm1	main.c	/^struct virtual_machine vm1;$/;"	v	typeref:struct:virtual_machine
vm_bss_section_data	guest-vm/guest_vm_data.h	/^unsigned char vm_bss_section_data [] = { 0,0,0,0 };$/;"	v	typeref:typename:unsigned char[]
vm_bss_section_data	guest-vm/guest_vm_data_backup.h	/^unsigned char vm_bss_section_data [] = { 71,67,67,58,32,40,85,98,117,110,116,117,32,57,46,51,46,/;"	v	typeref:typename:unsigned char[]
vm_bss_section_offset	guest-vm/guest_vm_data.h	/^unsigned long vm_bss_section_offset = 65768;$/;"	v	typeref:typename:unsigned long
vm_bss_section_offset	guest-vm/guest_vm_data_backup.h	/^unsigned long vm_bss_section_offset = 79344;$/;"	v	typeref:typename:unsigned long
vm_bss_section_size	guest-vm/guest_vm_data.h	/^unsigned long vm_bss_section_size = 4;$/;"	v	typeref:typename:unsigned long
vm_bss_section_size	guest-vm/guest_vm_data_backup.h	/^unsigned long vm_bss_section_size = 48;$/;"	v	typeref:typename:unsigned long
vm_comment_section_data	guest-vm/guest_vm_data_backup.h	/^unsigned char vm_comment_section_data [] = { 71,67,67,58,32,40,85,98,117,110,116,117,32,57,46,51/;"	v	typeref:typename:unsigned char[]
vm_comment_section_offset	guest-vm/guest_vm_data_backup.h	/^unsigned long vm_comment_section_offset = 79344;$/;"	v	typeref:typename:unsigned long
vm_comment_section_size	guest-vm/guest_vm_data_backup.h	/^unsigned long vm_comment_section_size = 42;$/;"	v	typeref:typename:unsigned long
vm_data_section_data	guest-vm/guest_vm_data_backup.h	/^unsigned char vm_data_section_data [] = { 0,0,0,9,0,0,0,0,-119,86,52,18,0,0,0,0 };$/;"	v	typeref:typename:unsigned char[]
vm_data_section_offset	guest-vm/guest_vm_data_backup.h	/^unsigned long vm_data_section_offset = 79264;$/;"	v	typeref:typename:unsigned long
vm_data_section_size	guest-vm/guest_vm_data_backup.h	/^unsigned long vm_data_section_size = 16;$/;"	v	typeref:typename:unsigned long
vm_elf_h	guest-vm/guest_vm_data.h	/^#define vm_elf_h$/;"	d
vm_elf_h	guest-vm/guest_vm_data_backup.h	/^#define vm_elf_h$/;"	d
vm_entry	guest-vm/guest_vm_data.h	/^unsigned long vm_entry = 104;$/;"	v	typeref:typename:unsigned long
vm_entry	guest-vm/guest_vm_data_backup.h	/^unsigned long vm_entry = 5104;$/;"	v	typeref:typename:unsigned long
vm_got_plt_section_data	guest-vm/guest_vm_data_backup.h	/^unsigned char vm_got_plt_section_data [] = { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 };$/;"	v	typeref:typename:unsigned char[]
vm_got_plt_section_offset	guest-vm/guest_vm_data_backup.h	/^unsigned long vm_got_plt_section_offset = 79320;$/;"	v	typeref:typename:unsigned long
vm_got_plt_section_size	guest-vm/guest_vm_data_backup.h	/^unsigned long vm_got_plt_section_size = 24;$/;"	v	typeref:typename:unsigned long
vm_got_section_data	guest-vm/guest_vm_data_backup.h	/^unsigned char vm_got_section_data [] = { 0,0,0,0,0,0,0,0,-8,53,0,96,0,0,0,0,0,54,0,96,0,0,0,0,16/;"	v	typeref:typename:unsigned char[]
vm_got_section_offset	guest-vm/guest_vm_data_backup.h	/^unsigned long vm_got_section_offset = 79280;$/;"	v	typeref:typename:unsigned long
vm_got_section_size	guest-vm/guest_vm_data_backup.h	/^unsigned long vm_got_section_size = 40;$/;"	v	typeref:typename:unsigned long
vm_id	arch/aarch64/inc/arch_vm.h	/^    uint32_t vm_id;$/;"	m	struct:virtual_machine	typeref:typename:uint32_t
vm_save	arch/aarch64/arch_vm.c	/^void vm_save(struct VM* _vm)$/;"	f	typeref:typename:void
vm_shstrtab_section_data	guest-vm/guest_vm_data.h	/^unsigned char vm_shstrtab_section_data [] = { 0,46,115,121,109,116,97,98,0,46,115,116,114,116,97/;"	v	typeref:typename:unsigned char[]
vm_shstrtab_section_data	guest-vm/guest_vm_data_backup.h	/^unsigned char vm_shstrtab_section_data [] = { 0,46,115,121,109,116,97,98,0,46,115,116,114,116,97/;"	v	typeref:typename:unsigned char[]
vm_shstrtab_section_offset	guest-vm/guest_vm_data.h	/^unsigned long vm_shstrtab_section_offset = 66224;$/;"	v	typeref:typename:unsigned long
vm_shstrtab_section_offset	guest-vm/guest_vm_data_backup.h	/^unsigned long vm_shstrtab_section_offset = 85528;$/;"	v	typeref:typename:unsigned long
vm_shstrtab_section_size	guest-vm/guest_vm_data.h	/^unsigned long vm_shstrtab_section_size = 38;$/;"	v	typeref:typename:unsigned long
vm_shstrtab_section_size	guest-vm/guest_vm_data_backup.h	/^unsigned long vm_shstrtab_section_size = 91;$/;"	v	typeref:typename:unsigned long
vm_start_current	hypervisor/vm.c	/^void vm_start_current(void)$/;"	f	typeref:typename:void
vm_strtab_section_data	guest-vm/guest_vm_data.h	/^unsigned char vm_strtab_section_data [] = { 0,109,97,105,110,46,99,0,36,100,0,36,120,0,101,110,1/;"	v	typeref:typename:unsigned char[]
vm_strtab_section_data	guest-vm/guest_vm_data_backup.h	/^unsigned char vm_strtab_section_data [] = { 0,118,101,99,116,111,114,46,111,0,115,112,95,101,108/;"	v	typeref:typename:unsigned char[]
vm_strtab_section_offset	guest-vm/guest_vm_data.h	/^unsigned long vm_strtab_section_offset = 66152;$/;"	v	typeref:typename:unsigned long
vm_strtab_section_offset	guest-vm/guest_vm_data_backup.h	/^unsigned long vm_strtab_section_offset = 83712;$/;"	v	typeref:typename:unsigned long
vm_strtab_section_size	guest-vm/guest_vm_data.h	/^unsigned long vm_strtab_section_size = 72;$/;"	v	typeref:typename:unsigned long
vm_strtab_section_size	guest-vm/guest_vm_data_backup.h	/^unsigned long vm_strtab_section_size = 1816;$/;"	v	typeref:typename:unsigned long
vm_symtab_section_data	guest-vm/guest_vm_data.h	/^unsigned char vm_symtab_section_data [] = { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,/;"	v	typeref:typename:unsigned char[]
vm_symtab_section_data	guest-vm/guest_vm_data_backup.h	/^unsigned char vm_symtab_section_data [] = { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,/;"	v	typeref:typename:unsigned char[]
vm_symtab_section_offset	guest-vm/guest_vm_data.h	/^unsigned long vm_symtab_section_offset = 65768;$/;"	v	typeref:typename:unsigned long
vm_symtab_section_offset	guest-vm/guest_vm_data_backup.h	/^unsigned long vm_symtab_section_offset = 79392;$/;"	v	typeref:typename:unsigned long
vm_symtab_section_size	guest-vm/guest_vm_data.h	/^unsigned long vm_symtab_section_size = 384;$/;"	v	typeref:typename:unsigned long
vm_symtab_section_size	guest-vm/guest_vm_data_backup.h	/^unsigned long vm_symtab_section_size = 4320;$/;"	v	typeref:typename:unsigned long
vm_text_section_data	guest-vm/guest_vm_data.h	/^unsigned char vm_text_section_data [] =$/;"	v	typeref:typename:unsigned char[]
vm_text_section_data	guest-vm/guest_vm_data_backup.h	/^unsigned char vm_text_section_data [] = { 7,4,0,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,/;"	v	typeref:typename:unsigned char[]
vm_text_section_offset	guest-vm/guest_vm_data.h	/^unsigned long vm_text_section_offset = 65536;$/;"	v	typeref:typename:unsigned long
vm_text_section_offset	guest-vm/guest_vm_data_backup.h	/^unsigned long vm_text_section_offset = 65536;$/;"	v	typeref:typename:unsigned long
vm_text_section_size	guest-vm/guest_vm_data.h	/^unsigned long vm_text_section_size = 232;$/;"	v	typeref:typename:unsigned long
vm_text_section_size	guest-vm/guest_vm_data_backup.h	/^unsigned long vm_text_section_size = 13336;$/;"	v	typeref:typename:unsigned long
vm_text_section_start	guest-vm/guest_vm_data.h	/^unsigned long vm_text_section_start = 1610612736;$/;"	v	typeref:typename:unsigned long
vm_text_section_start	guest-vm/guest_vm_data_backup.h	/^unsigned long vm_text_section_start = 1610612736;$/;"	v	typeref:typename:unsigned long
vm_v8_aarch64_gicv3_cpuif_section_data	guest-vm/guest_vm_data_backup.h	/^unsigned char vm_v8_aarch64_gicv3_cpuif_section_data [] = { -96,-52,24,-43,-33,63,3,-43,-64,3,95/;"	v	typeref:typename:unsigned char[]
vm_v8_aarch64_gicv3_cpuif_section_offset	guest-vm/guest_vm_data_backup.h	/^unsigned long vm_v8_aarch64_gicv3_cpuif_section_offset = 78872;$/;"	v	typeref:typename:unsigned long
vm_v8_aarch64_gicv3_cpuif_section_size	guest-vm/guest_vm_data_backup.h	/^unsigned long vm_v8_aarch64_gicv3_cpuif_section_size = 392;$/;"	v	typeref:typename:unsigned long
wakeUpRedist	arch/aarch64/gicv3/gicv3_basic.c	/^uint32_t wakeUpRedist(uint32_t rd)$/;"	f	typeref:typename:uint32_t
writeDIR	arch/aarch64/gicv3/gicv3_cpuif.S	/^writeDIR:$/;"	l
writeEOIGrp0	arch/aarch64/gicv3/gicv3_cpuif.S	/^writeEOIGrp0:$/;"	l
writeEOIGrp1	arch/aarch64/gicv3/gicv3_cpuif.S	/^writeEOIGrp1:$/;"	l
x1	arch/aarch64/inc/regs.h	/^    REG64 x1;$/;"	m	struct:context_regs	typeref:typename:REG64
x10	arch/aarch64/inc/regs.h	/^    REG64 x10;$/;"	m	struct:context_regs	typeref:typename:REG64
x11	arch/aarch64/inc/regs.h	/^    REG64 x11;$/;"	m	struct:context_regs	typeref:typename:REG64
x12	arch/aarch64/inc/regs.h	/^    REG64 x12;$/;"	m	struct:context_regs	typeref:typename:REG64
x13	arch/aarch64/inc/regs.h	/^    REG64 x13;$/;"	m	struct:context_regs	typeref:typename:REG64
x14	arch/aarch64/inc/regs.h	/^    REG64 x14;$/;"	m	struct:context_regs	typeref:typename:REG64
x15	arch/aarch64/inc/regs.h	/^    REG64 x15;$/;"	m	struct:context_regs	typeref:typename:REG64
x16	arch/aarch64/inc/regs.h	/^    REG64 x16;$/;"	m	struct:context_regs	typeref:typename:REG64
x17	arch/aarch64/inc/regs.h	/^    REG64 x17;$/;"	m	struct:context_regs	typeref:typename:REG64
x18	arch/aarch64/inc/regs.h	/^    REG64 x18;$/;"	m	struct:context_regs	typeref:typename:REG64
x19	arch/aarch64/inc/regs.h	/^    REG64 x19;$/;"	m	struct:context_regs	typeref:typename:REG64
x2	arch/aarch64/inc/regs.h	/^    REG64 x2;$/;"	m	struct:context_regs	typeref:typename:REG64
x20	arch/aarch64/inc/regs.h	/^    REG64 x20;$/;"	m	struct:context_regs	typeref:typename:REG64
x21	arch/aarch64/inc/regs.h	/^    REG64 x21;$/;"	m	struct:context_regs	typeref:typename:REG64
x22	arch/aarch64/inc/regs.h	/^    REG64 x22;$/;"	m	struct:context_regs	typeref:typename:REG64
x23	arch/aarch64/inc/regs.h	/^    REG64 x23;$/;"	m	struct:context_regs	typeref:typename:REG64
x24	arch/aarch64/inc/regs.h	/^    REG64 x24;$/;"	m	struct:context_regs	typeref:typename:REG64
x25	arch/aarch64/inc/regs.h	/^    REG64 x25;$/;"	m	struct:context_regs	typeref:typename:REG64
x26	arch/aarch64/inc/regs.h	/^    REG64 x26;$/;"	m	struct:context_regs	typeref:typename:REG64
x27	arch/aarch64/inc/regs.h	/^    REG64 x27;$/;"	m	struct:context_regs	typeref:typename:REG64
x28	arch/aarch64/inc/regs.h	/^    REG64 x28;$/;"	m	struct:context_regs	typeref:typename:REG64
x29	arch/aarch64/inc/regs.h	/^    REG64 x29;$/;"	m	struct:context_regs	typeref:typename:REG64
x3	arch/aarch64/inc/regs.h	/^    REG64 x3;$/;"	m	struct:context_regs	typeref:typename:REG64
x30	arch/aarch64/inc/regs.h	/^    REG64 x30;$/;"	m	struct:context_regs	typeref:typename:REG64
x4	arch/aarch64/inc/regs.h	/^    REG64 x4;$/;"	m	struct:context_regs	typeref:typename:REG64
x5	arch/aarch64/inc/regs.h	/^    REG64 x5;$/;"	m	struct:context_regs	typeref:typename:REG64
x6	arch/aarch64/inc/regs.h	/^    REG64 x6;$/;"	m	struct:context_regs	typeref:typename:REG64
x7	arch/aarch64/inc/regs.h	/^    REG64 x7;$/;"	m	struct:context_regs	typeref:typename:REG64
x8	arch/aarch64/inc/regs.h	/^    REG64 x8;$/;"	m	struct:context_regs	typeref:typename:REG64
x9	arch/aarch64/inc/regs.h	/^    REG64 x9;$/;"	m	struct:context_regs	typeref:typename:REG64
